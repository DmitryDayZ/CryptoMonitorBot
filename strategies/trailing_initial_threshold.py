class TrailingInitialThresholdStrategy:
    def __init__(self, threshold_percent: float):
        self.threshold_percent = threshold_percent
        self.anchor_price: dict[str, float] = {}  # –Ø–∫–æ—Ä—å: –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º–∞—è —Ü–µ–Ω–∞ (–º–∏–Ω–∏–º—É–º –ø—Ä–∏ –ø–æ–∫—É–ø–∫–µ, –º–∞–∫—Å–∏–º—É–º –ø—Ä–∏ –ø—Ä–æ–¥–∞–∂–µ)
        self.direction: dict[str, str] = {}       # –ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è: 'buy', 'sell', 'neutral'

    async def check(self, exchange: str, symbol: str, current_price: float) -> list[dict]:
        alerts = []

        # –ï—Å–ª–∏ —Å–∏–º–≤–æ–ª –Ω–æ–≤—ã–π, –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º
        if symbol not in self.anchor_price:
            self.anchor_price[symbol] = current_price
            self.direction[symbol] = 'neutral'
            return []

        anchor = self.anchor_price[symbol]
        direction = self.direction[symbol]

        # –ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ü–µ–Ω—ã –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ —è–∫–æ—Ä–Ω–æ–π –≤ –ø—Ä–æ—Ü–µ–Ω—Ç–∞—Ö
        change = (current_price - anchor) / anchor * 100



        # üéØ –°–∏–≥–Ω–∞–ª –Ω–∞ –ø–æ–∫—É–ø–∫—É: —Ü–µ–Ω–∞ —É–ø–∞–ª–∞ –Ω–∞ threshold% –æ—Ç anchor
        if change <= -self.threshold_percent:
            alerts.append({
                "action": "buy",
                "strategy": f"TrailingInitialThresholdStrategy ({self.threshold_percent}%)",
                "amount": None  # –ø—É—Å—Ç—å –≤—ã–∑—ã–≤–∞—é—â–∏–π –∫–æ–¥ —Å–∞–º –æ–ø—Ä–µ–¥–µ–ª–∏—Ç –æ–±—ä—ë–º
            })
            # –û–±–Ω–æ–≤–ª—è–µ–º —è–∫–æ—Ä—å –∏ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ
            self.anchor_price[symbol] = current_price
            self.direction[symbol] = 'buy'

        # üéØ –°–∏–≥–Ω–∞–ª –Ω–∞ –ø—Ä–æ–¥–∞–∂—É: —Ü–µ–Ω–∞ –≤—ã—Ä–æ—Å–ª–∞ –Ω–∞ threshold% –æ—Ç anchor
        elif change >= self.threshold_percent:
            alerts.append({
                "action": "sell",
                "strategy": f"TrailingInitialThresholdStrategy ({self.threshold_percent}%)",
                "amount": None
            })
            self.anchor_price[symbol] = current_price
            self.direction[symbol] = 'sell'

        else:
            # –ï—Å–ª–∏ –µ—â—ë –Ω–µ—Ç –¥–µ–π—Å—Ç–≤–∏—è, –ø—Ä–æ—Å—Ç–æ –æ–±–Ω–æ–≤–ª—è–µ–º anchor —Ç–µ–∫—É—â–µ–π —Ü–µ–Ω–æ–π
            if direction == 'neutral':
                self.anchor_price[symbol] = current_price

            # –ï—Å–ª–∏ —Ä–∞–Ω–µ–µ –±—ã–ª buy, –∏—â–µ–º –Ω–æ–≤–æ–µ –¥–Ω–æ –¥–ª—è trailing-–ø–æ–∫—É–ø–∫–∏
            elif direction == 'buy':
                self.anchor_price[symbol] = min(anchor, current_price)

            # –ï—Å–ª–∏ —Ä–∞–Ω–µ–µ –±—ã–ª sell, –∏—â–µ–º –Ω–æ–≤—ã–π –º–∞–∫—Å–∏–º—É–º –¥–ª—è trailing-–ø—Ä–æ–¥–∞–∂–∏
            elif direction == 'sell':
                self.anchor_price[symbol] = max(anchor, current_price)

        return alerts
